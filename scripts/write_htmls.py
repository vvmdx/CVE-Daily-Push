# -*- coding: utf-8 -*-
# @Time    : 2023/12/27 9:43
# @Author  : vvmdx
# @File    : write_htmls.py
# @Project : CVE-news
import datetime
import os

new_entries_html_template = """
<tr style="height: 30px;">
    <td><a href="{cve_hyperlink}" target="_blank" rel="noopener">{cve_id}</a></td>
    <td>{cvss_score}</td>
    <td>{cvss_severity}</td>
</tr>
"""

modified_entries_html_template = """
<tr style="height: 30px;">
    <td><a href="{cve_hyperlink}" target="_blank" rel="noopener">{cve_id}</a></td>
    <td>{cvss_score}</td>
    <td>{cvss_severity}</td>
    <td>{changes}</td>
</tr>
"""

references_template = """
    <li><a href="{reference_hyperlink}" target="_blank" rel="noopener">{reference}</a></li>
"""

new_cve_details_template = """
    <p><span style="font-size: 14pt;"><strong>{cve_id}</strong></span></p>
    <p>CVSS V3：{cvss_score}</p>
    <p>漏洞等级：{cvss_severity}</p>
    <p>漏洞描述：{descriptions}</p>
    <p>参考资料：</p>
    <ol>{references}</ol>
"""

modified_cve_details_template = """
    <p><span style="font-size: 14pt;"><strong>{cve_id}</strong></span></p>
    <p>CVSS V3：{cvss_score}</p>
    <p>漏洞等级：{cvss_severity}</p>
    <p>更新的地方：{changes}</p>
    <p>漏洞描述：{descriptions}</p>
    <p>参考资料：</p>
    <ol>{references}</ol>
"""

new_cve_overview_template = """
昨日共新增CVE <strong>{new_cve_total}</strong>个，其中
<span style="background-color: #ced4d9;"><strong>CRITICAL</strong></span>共{c}个，
<span style="background-color: #f8cac6;"><strong>HIGH</strong></span>共{h}个，
<span style="background-color: #f1c40f;"><strong>MEDIUM</strong></span>共{m}个，
<span style="background-color: #fbeeb8;"><strong>LOW</strong></span>共{l}个，还有{n}个暂无评分
"""

modified_cve_overview_template = """
昨日共更新CVE <strong>{modified_cve_total}</strong>个，其中
<span style="background-color: #ced4d9;"><strong>CRITICAL</strong></span>共{c}个，
<span style="background-color: #f8cac6;"><strong>HIGH</strong></span>共{h}个，
<span style="background-color: #f1c40f;"><strong>MEDIUM</strong></span>共{m}个，
<span style="background-color: #fbeeb8;"><strong>LOW</strong></span>共{l}个，还有{n}个暂无评分
"""


def write_html(cve_dict):
    # work_dir = os.getenv("GITHUB_WORKSPACE")
    # print("work_dir: " + str(work_dir))
    html_dir = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
    file_path = os.path.join(html_dir, "html", "template.html")
    # with open("../html/template.html", "r", encoding="utf-8") as file:
    with open(file_path, "r", encoding="utf-8") as file:
        template = file.read()
    yesterday = datetime.date.today()
    new_entries, new_cve_details, new_cve_overview, modified_entries, modified_cve_details, modified_cve_overview = set_html(cve_dict)

    result = template.format(date=yesterday, new_cve_overview=new_cve_overview, modified_cve_overview=modified_cve_overview, new_entries=new_entries, modified_entries=modified_entries, new_cve_details=new_cve_details, modified_cve_details=modified_cve_details)

    print(result)
    return result


def nothing_html():
    yesterday = datetime.date.today()
    html_dir = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
    file_path = os.path.join(html_dir, "html", "nothing.html")
    with open(file_path, "r", encoding="utf-8") as file:
        template = file.read()
    result = template.format(date=yesterday)
    return result



def set_html(cve_dict):
    new_entries_dict = cve_dict["new_entries"]
    new_entries = ""
    new_cve_details = ""
    new_cve_total = len(new_entries_dict)
    low = medium = high = critical = non = 0
    # new_cve_serverity_dict = {"LOW": low, "MEDIUM": medium, "HIGH": high, "CRITICAL": critical, "None": non}
    for cve_detail in new_entries_dict:
        link = cve_detail["mitre"]
        id = cve_detail["id"]
        try:
            # 用于捕获异常，方便定位哪里出了问题
            score = cve_detail["baseScore"]
            severity = cve_detail["severity"]
            descriptions = cve_detail["descriptions"]
            references = cve_detail["references"]
        except KeyError as e:
            print(e)
            print("Exception at {}".format(id))
        finally:
            score = cve_detail["baseScore"] if "baseScore" in cve_detail else None
            severity = cve_detail["severity"] if "severity" in cve_detail else None
            descriptions = cve_detail["descriptions"] if "descriptions" in cve_detail else None
            references = cve_detail["references"] if "references" in cve_detail else []

        if severity:
            if severity == "MEDIUM":
                medium += 1
            elif severity == "HIGH":
                high += 1
            elif severity == "LOW":
                low += 1
            else:
                critical += 1
        else:
            non += 1
        ref_list = ""
        for reference in references:
            ref_list += references_template.format(reference_hyperlink=reference, reference=reference)
        tmp_1 = new_entries_html_template.format(cve_hyperlink=link, cve_id=id,
                                               cvss_score=score, cvss_severity=severity)
        new_entries += tmp_1

        tmp_2 = new_cve_details_template.format(cve_id=id, cvss_score=score, cvss_severity=severity,
                                       descriptions=descriptions, references=ref_list)
        new_cve_details += tmp_2

    new_cve_overview = new_cve_overview_template.format(new_cve_total=new_cve_total, c=critical, h=high, m=medium, l=low, n=non)

    # 复用代码很多。。。懒得优化了
    modified_entries_dict = cve_dict["modified_entries"]
    modified_entries = ""
    modified_cve_details = ""
    modified_cve_total = len(modified_entries_dict)
    low = medium = high = critical = non = 0
    # modified_cve_serverity_dict = {"LOW": low_, "MEDIUM": medium_, "HIGH": high_, "CRITICAL": critical_, "None": non_}
    for cve_detail in modified_entries_dict:
        link = cve_detail["mitre"]
        id = cve_detail["id"]
        try:
            score = cve_detail["baseScore"]
            change = cve_detail["changes"]
            severity = cve_detail["severity"]
            descriptions = cve_detail["descriptions"]
            references = cve_detail["references"]
        except KeyError as e:
            print(e)
            print("Exception at {}".format(id))
        finally:
            score = cve_detail["baseScore"] if "baseScore" in cve_detail else None
            change = cve_detail["changes"] if "changes" in cve_detail else None
            severity = cve_detail["severity"] if "severity" in cve_detail else None
            descriptions = cve_detail["descriptions"] if "descriptions" in cve_detail else None
            references = cve_detail["references"] if "references" in cve_detail else []
        if severity:
            if severity == "MEDIUM":
                medium += 1
            elif severity == "HIGH":
                high += 1
            elif severity == "LOW":
                low += 1
            else:
                critical += 1
        else:
            non += 1
        ref_list = ""
        for reference in references:
            ref_list += references_template.format(reference_hyperlink=reference, reference=reference)
        tmp_1 = modified_entries_html_template.format(cve_hyperlink=link, cve_id=id,
                                               cvss_score=score, cvss_severity=severity, changes=change)
        modified_entries += tmp_1

        tmp_2 = modified_cve_details_template.format(cve_id=id, cvss_score=score, cvss_severity=severity,
                                       changes=change, descriptions=descriptions, references=ref_list)
        modified_cve_details += tmp_2

    modified_cve_overview = modified_cve_overview_template.format(modified_cve_total=modified_cve_total, c=critical, h=high, m=medium, l=low, n=non)

    return new_entries, new_cve_details, new_cve_overview, modified_entries, modified_cve_details, modified_cve_overview


